{"version":3,"sources":["components/reducers/orderReducer.js","components/OrdersManagement/OrdersManagement.js","components/ReducerCount/ReducerCount.js","App.js","reportWebVitals.js","index.js"],"names":["orderState","orders","orderReducer","state","action","type","newOrder","id","name","filter","od","OrdersManagement","nameRef","useRef","useReducer","dispatch","className","length","onSubmit","event","preventDefault","current","value","ref","class","map","onClick","initialState","count","reducer","ReducerCount","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAAaA,EAAY,CACnBC,OAAO,IAGAC,EAAe,SAACC,EAAMC,GAE7B,OAAQA,EAAOC,MAET,IAAK,YACC,IAAMC,EACN,CACMC,GAAIH,EAAOG,GACXC,KAAMJ,EAAOI,MAInB,MAAO,CAACP,OADO,sBAAOE,EAAMF,QAAb,CAAqBK,KAG1C,IAAK,eAGC,MADiB,CAACL,OADAE,EAAMF,OAAOQ,QAAO,SAAAC,GAAE,OAAEA,EAAGH,KAAKH,EAAOG,OAI/D,QACM,OAAOJ,I,OC2BVQ,EAhDU,WAEnB,IAAMC,EAAUC,mBAFS,EAGCC,qBAAWZ,EAAcF,GAH1B,mBAGlBG,EAHkB,KAGXY,EAHW,KAiBzB,OACM,sBAAKC,UAAU,iBAAf,UACM,qDAAwBb,EAAMF,OAAOgB,UACrC,sBAAMC,SAfG,SAAAC,GACfA,EAAMC,iBAENL,EACM,CACMV,KAAM,YACNG,KAAMI,EAAQS,QAAQC,MACtBf,GAAIJ,EAAMF,OAAOgB,OAAS,IAEtCL,EAAQS,QAAQC,MAAQ,IAMlB,SACM,uBAAOC,IAAKX,EAASY,MAAM,mBAEjC,wBAAOA,MAAM,sBAAb,UACM,gCACM,6BACM,4CAGZ,gCAEYrB,EAAMF,OAAOwB,KAAI,SAAAf,GAAE,OAEb,qBAAIM,UAAU,cAAd,UACM,oBAAIA,UAAU,cAAd,SAA6BN,EAAGF,OAChC,wBAAQkB,QAAS,kBAAIX,EAAS,CAACV,KAAK,eAAeE,GAAGG,EAAGH,MAAMS,UAAU,MAAzE,mCCpC1CW,EAAe,CAAEC,MAAO,GACxBC,EAAU,SAAC1B,EAAOC,GAClB,OAAQA,EAAOC,MACT,IAAK,YACC,MAAO,CAAEuB,MAAOzB,EAAMyB,MAAQ,GACpC,IAAK,YACC,MAAO,CAAEA,MAAOzB,EAAMyB,MAAQ,GACpC,QACM,OAAOzB,IAmBV2B,EAfM,WAAO,IAAD,EAEKhB,qBAAWe,EAASF,GAFzB,mBAEdxB,EAFc,KAEPY,EAFO,KAIrB,OAEM,sBAAKC,UAAU,iBAAf,UACM,iDAAoBb,EAAMyB,SAC1B,wBAAQZ,UAAU,4BAA4BU,QAAS,kBAAMX,EAAS,CAAEV,KAAM,eAA9E,uBACA,wBAAQW,UAAU,sBAAsBU,QAAS,kBAAMX,EAAS,CAAEV,KAAM,eAAxE,2BCXH0B,MATf,WACE,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,QCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7977c07c.chunk.js","sourcesContent":["export const orderState ={ \r\n      orders:[]\r\n}\r\n\r\nexport const orderReducer = (state,action)=>{\r\n\r\n      switch (action.type)\r\n      {\r\n            case 'ADD_ORDER':\r\n                  const newOrder = \r\n                  {\r\n                        id: action.id,\r\n                        name: action.name,\r\n                  }\r\n\r\n                  const allOrders = [...state.orders, newOrder]\r\n                  return {orders: allOrders};\r\n\r\n            case 'REMOVE_ORDER': \r\n                  const remaining = state.orders.filter(od=>od.id!==action.id);\r\n                  const newState = {orders:remaining};\r\n                  return newState;\r\n\r\n            default:\r\n                  return state;\r\n      }\r\n}","import React, { useReducer, useRef } from 'react';\r\nimport { orderReducer, orderState } from '../reducers/orderReducer';\r\n\r\nconst OrdersManagement = () => {\r\n\r\n      const nameRef = useRef();\r\n      const [state, dispatch] = useReducer(orderReducer, orderState);\r\n\r\n      const handleSubmit = event => {\r\n            event.preventDefault();\r\n\r\n            dispatch(\r\n                  {\r\n                        type: 'ADD_ORDER',\r\n                        name: nameRef.current.value,\r\n                        id: state.orders.length + 1\r\n                  })\r\n            nameRef.current.value = \"\";\r\n      }\r\n\r\n      return (\r\n            <div className='container mt-5'>\r\n                  <h1>Orders Management: {state.orders.length}</h1>\r\n                  <form onSubmit={handleSubmit}>\r\n                        <input ref={nameRef} class=\"form-control\" />\r\n                  </form>\r\n                  <table class=\"table table-striped\">\r\n                        <thead>\r\n                              <tr>\r\n                                    <th>Orders</th>\r\n                              </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                              {\r\n                                    state.orders.map(od =>\r\n\r\n                                          <tr className=\"table-light\">\r\n                                                <td className=\"table-light\">{od.name}</td>\r\n                                                <button onClick={()=>dispatch({type:'REMOVE_ORDER',id:od.id})} className='btn'>Remove</button>\r\n                                          </tr>\r\n\r\n\r\n                                    )\r\n\r\n                              }\r\n                        </tbody>\r\n                  </table>\r\n            </div>\r\n      );\r\n};\r\n\r\nexport default OrdersManagement;","import React, { useReducer } from 'react';\r\n\r\nconst initialState = { count: 0 }\r\nconst reducer = (state, action) => {\r\n      switch (action.type) {\r\n            case 'INCREMENT':\r\n                  return { count: state.count + 1 }\r\n            case 'DECREMENT':\r\n                  return { count: state.count - 1 }\r\n            default:\r\n                  return state;\r\n      }\r\n}\r\n\r\nconst ReducerCount = () => {\r\n\r\n      const [state, dispatch] = useReducer(reducer, initialState);\r\n      \r\n      return (\r\n\r\n            <div className=\"container mt-5\">\r\n                  <h1>Reducer Count: {state.count}</h1>\r\n                  <button className='btn btn-success mx-5 mt-5' onClick={() => dispatch({ type: 'INCREMENT' })}>Increment</button>\r\n                  <button className='btn btn-danger mt-5' onClick={() => dispatch({ type: 'DECREMENT' })}>Decrement</button>\r\n            </div>\r\n\r\n      );\r\n};\r\n\r\nexport default ReducerCount;","import OrdersManagement from \"./components/OrdersManagement/OrdersManagement\";\nimport ReducerCount from \"./components/ReducerCount/ReducerCount\";\n\nfunction App() {\n  return (\n    <div>\n      <ReducerCount />\n      <OrdersManagement />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}